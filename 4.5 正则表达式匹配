class Solution:
    def isMatch(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: bool
        """
        dp = [[False]*(len(p)+1) for i in range(len(s)+1)]
        dp[0][0] = True     #s,p均为空，则成功匹配
        
        for i in range(1, len(p)):
            if p[i] == '*':
                dp[0][i+1] = dp[0][i-1]     #p的下标比对应的dp[0]的下标小1
            
        for i in range(len(s)):
            for j in range(len(p)):
                if p[j] == '.':
                    dp[i+1][j+1] = dp[i][j]
                elif p[j] == '*':
                    if dp[i+1][j] or dp[i+1][j-1]:
                        dp[i+1][j+1] = True
                    elif dp[i][j+1] and (p[j-1]==s[i] or p[j-1]=='.'):
                        dp[i+1][j+1] = True
                else:
                    
                    dp[i+1][j+1] = dp[i][j] and p[j] == s[i]
                    # print(i, j)
                    
        return dp[-1][-1]
