class Solution:
    def longestIncreasingPath(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: int
        """
        if len(matrix) == 0:
            return 0
        m, n = len(matrix), len(matrix[0])
        dp = [ 1 for i in range(len(matrix)) for j in range(len(matrix[0]))]
        # print(len(dp))
        for i in range(m):
            for j in range(n):
                if i == 0 and j == 0:
                    dp[0] = 1
                elif i == 0:
                    if matrix[0][j] < matrix[0][j-1]:
                        dp[j] = dp[j-1] + 1
                elif j == 0:
                    if matrix[i][0] < matrix[i-1][0]:
                        dp[i*n] = dp[(i-1)*n] + 1
                else:
                    if matrix[i][j] < matrix[i][j-1]:
                        dp[i*n+j] = dp[i*n+j-1] + 1
                    if matrix[i][j] < matrix[i-1][j]:
                        dp[i*n+j] = max(dp[i*n+j], dp[(i-1)*n+j]+1)
                print(dp)
        return max(dp)
